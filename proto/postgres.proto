syntax = "proto3";
package cnpgi.identity.v1;
option go_package = "github.com/cloudnative-pg/cnpg-i/pkg/postgres";

service Postgres {
  // GetCapabilities gets the capabilities of the Backup service
  rpc GetCapabilities(PostgresCapabilitiesRequest) returns (PostgresCapabilitiesResult) {}

  // EnrichConfiguration is called before applying the configuration
  // to PostgreSQL
  rpc EnrichConfiguration(EnrichConfigurationRequest) returns (EnrichConfigurationResult) {}
}

message PostgresCapabilitiesRequest {
  // Intentionally empty
}

message PostgresCapabilitiesResult {
  // All the capabilities that the controller service supports. This
  // field is OPTIONAL.
  repeated PostgresCapability capabilities = 1;
}

message PostgresCapability {
  message RPC {
    enum Type {
      TYPE_UNSPECIFIED = 0;

      // TYPE_BACKUP indicates that the Plugin is able to
      // enrich the PostgreSQL configuration via the
      // EnrichConfiguration endpoint
      TYPE_ENRICH_CONFIGURATION = 1;
    }

    Type type = 1;
  }

  oneof type {
    RPC rpc = 1;
  }
}

message EnrichConfigurationRequest {
  // This field is REQUIRED and represent the PostgreSQL configuration parameters as
  // generated by the instance manager
  map<string, string> configs = 1;
}

message EnrichConfigurationResult {
  // This field is OPTIONAL. It represent the configuration parameters that need
  // to be changed before applying a new configuration
  map<string, string> configs = 1;
}
