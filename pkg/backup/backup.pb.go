// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/backup.proto

package backup

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackupCapability_RPC_Type int32

const (
	BackupCapability_RPC_TYPE_UNSPECIFIED BackupCapability_RPC_Type = 0
	// TYPE_BACKUP indicates that the Plugin is able to
	// take physical backups. This feature is required for every
	// plugin exposing the Backup service
	BackupCapability_RPC_TYPE_BACKUP BackupCapability_RPC_Type = 1
)

// Enum value maps for BackupCapability_RPC_Type.
var (
	BackupCapability_RPC_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_BACKUP",
	}
	BackupCapability_RPC_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_BACKUP":      1,
	}
)

func (x BackupCapability_RPC_Type) Enum() *BackupCapability_RPC_Type {
	p := new(BackupCapability_RPC_Type)
	*p = x
	return p
}

func (x BackupCapability_RPC_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupCapability_RPC_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_backup_proto_enumTypes[0].Descriptor()
}

func (BackupCapability_RPC_Type) Type() protoreflect.EnumType {
	return &file_proto_backup_proto_enumTypes[0]
}

func (x BackupCapability_RPC_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupCapability_RPC_Type.Descriptor instead.
func (BackupCapability_RPC_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_backup_proto_rawDescGZIP(), []int{2, 0, 0}
}

type BackupCapabilitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupCapabilitiesRequest) Reset() {
	*x = BackupCapabilitiesRequest{}
	mi := &file_proto_backup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupCapabilitiesRequest) ProtoMessage() {}

func (x *BackupCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*BackupCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_proto_backup_proto_rawDescGZIP(), []int{0}
}

type BackupCapabilitiesResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All the capabilities that the controller service supports. This
	// field is OPTIONAL.
	Capabilities  []*BackupCapability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupCapabilitiesResult) Reset() {
	*x = BackupCapabilitiesResult{}
	mi := &file_proto_backup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupCapabilitiesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupCapabilitiesResult) ProtoMessage() {}

func (x *BackupCapabilitiesResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupCapabilitiesResult.ProtoReflect.Descriptor instead.
func (*BackupCapabilitiesResult) Descriptor() ([]byte, []int) {
	return file_proto_backup_proto_rawDescGZIP(), []int{1}
}

func (x *BackupCapabilitiesResult) GetCapabilities() []*BackupCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type BackupCapability struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*BackupCapability_Rpc
	Type          isBackupCapability_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupCapability) Reset() {
	*x = BackupCapability{}
	mi := &file_proto_backup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupCapability) ProtoMessage() {}

func (x *BackupCapability) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupCapability.ProtoReflect.Descriptor instead.
func (*BackupCapability) Descriptor() ([]byte, []int) {
	return file_proto_backup_proto_rawDescGZIP(), []int{2}
}

func (x *BackupCapability) GetType() isBackupCapability_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BackupCapability) GetRpc() *BackupCapability_RPC {
	if x != nil {
		if x, ok := x.Type.(*BackupCapability_Rpc); ok {
			return x.Rpc
		}
	}
	return nil
}

type isBackupCapability_Type interface {
	isBackupCapability_Type()
}

type BackupCapability_Rpc struct {
	Rpc *BackupCapability_RPC `protobuf:"bytes,1,opt,name=rpc,proto3,oneof"`
}

func (*BackupCapability_Rpc) isBackupCapability_Type() {}

type BackupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This field is REQUIRED. Value of this field is the JSON
	// serialization of the Cluster being backed up
	ClusterDefinition []byte `protobuf:"bytes,1,opt,name=cluster_definition,json=clusterDefinition,proto3" json:"cluster_definition,omitempty"`
	// This field is REQUIRED. Value of this field is the JSON
	// serialization of the Backup that is being taken
	BackupDefinition []byte `protobuf:"bytes,2,opt,name=backup_definition,json=backupDefinition,proto3" json:"backup_definition,omitempty"`
	// This field is OPTIONAL. Value of this field is the configuration
	// of this backup as set in the Backup or in the ScheduledBackup object
	Parameters    map[string]string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupRequest) Reset() {
	*x = BackupRequest{}
	mi := &file_proto_backup_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRequest) ProtoMessage() {}

func (x *BackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backup_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRequest.ProtoReflect.Descriptor instead.
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return file_proto_backup_proto_rawDescGZIP(), []int{3}
}

func (x *BackupRequest) GetClusterDefinition() []byte {
	if x != nil {
		return x.ClusterDefinition
	}
	return nil
}

func (x *BackupRequest) GetBackupDefinition() []byte {
	if x != nil {
		return x.BackupDefinition
	}
	return nil
}

func (x *BackupRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type BackupResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This field is REQUIRED and contains a machine-readable ID of the
	// backup that is being taken
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	// This field is OPTIONAL and contains a human-readable name of the
	// backup that is being taken
	BackupName string `protobuf:"bytes,2,opt,name=backup_name,json=backupName,proto3" json:"backup_name,omitempty"`
	// This field is REQUIRED and contains the Unix timestamp of the start
	// time of the backup
	StartedAt int64 `protobuf:"varint,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// This field is REQUIRED and contains the Unix timestamp of the end
	// time of the backup
	StoppedAt int64 `protobuf:"varint,4,opt,name=stopped_at,json=stoppedAt,proto3" json:"stopped_at,omitempty"`
	// This field is OPTIONAL and contains the current WAL when the backup was started
	BeginWal string `protobuf:"bytes,5,opt,name=begin_wal,json=beginWal,proto3" json:"begin_wal,omitempty"`
	// This field is OPTIONAL and contains the current WAL at the end of the backup
	EndWal string `protobuf:"bytes,6,opt,name=end_wal,json=endWal,proto3" json:"end_wal,omitempty"`
	// This field is OPTIONAL and contains the current LSN record when the backup was started
	BeginLsn string `protobuf:"bytes,7,opt,name=begin_lsn,json=beginLsn,proto3" json:"begin_lsn,omitempty"`
	// This field is OPTIONAL and contains the current LSN record when the backup has finished
	EndLsn string `protobuf:"bytes,8,opt,name=end_lsn,json=endLsn,proto3" json:"end_lsn,omitempty"`
	// This field is OPTIONAL and contains the backup label of the backup that have been taken
	BackupLabelFile []byte `protobuf:"bytes,9,opt,name=backup_label_file,json=backupLabelFile,proto3" json:"backup_label_file,omitempty"`
	// This field is OPTIONAL and contains the tablespace map of the backup that have been taken
	TablespaceMapFile []byte `protobuf:"bytes,10,opt,name=tablespace_map_file,json=tablespaceMapFile,proto3" json:"tablespace_map_file,omitempty"`
	// This field is OPTIONAL and contains the ID of the instance that have been backed up
	InstanceId string `protobuf:"bytes,11,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// This field is REQUIRED and is set to true for online/hot backups and to false otherwise.
	Online bool `protobuf:"varint,12,opt,name=online,proto3" json:"online,omitempty"`
	// This field is OPTIONAL and contains all the plugin specific information that needs to be stored
	Metadata      map[string]string `protobuf:"bytes,13,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupResult) Reset() {
	*x = BackupResult{}
	mi := &file_proto_backup_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupResult) ProtoMessage() {}

func (x *BackupResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backup_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupResult.ProtoReflect.Descriptor instead.
func (*BackupResult) Descriptor() ([]byte, []int) {
	return file_proto_backup_proto_rawDescGZIP(), []int{4}
}

func (x *BackupResult) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *BackupResult) GetBackupName() string {
	if x != nil {
		return x.BackupName
	}
	return ""
}

func (x *BackupResult) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *BackupResult) GetStoppedAt() int64 {
	if x != nil {
		return x.StoppedAt
	}
	return 0
}

func (x *BackupResult) GetBeginWal() string {
	if x != nil {
		return x.BeginWal
	}
	return ""
}

func (x *BackupResult) GetEndWal() string {
	if x != nil {
		return x.EndWal
	}
	return ""
}

func (x *BackupResult) GetBeginLsn() string {
	if x != nil {
		return x.BeginLsn
	}
	return ""
}

func (x *BackupResult) GetEndLsn() string {
	if x != nil {
		return x.EndLsn
	}
	return ""
}

func (x *BackupResult) GetBackupLabelFile() []byte {
	if x != nil {
		return x.BackupLabelFile
	}
	return nil
}

func (x *BackupResult) GetTablespaceMapFile() []byte {
	if x != nil {
		return x.TablespaceMapFile
	}
	return nil
}

func (x *BackupResult) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *BackupResult) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *BackupResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BackupCapability_RPC struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          BackupCapability_RPC_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cnpgi.backup.v1.BackupCapability_RPC_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupCapability_RPC) Reset() {
	*x = BackupCapability_RPC{}
	mi := &file_proto_backup_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupCapability_RPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupCapability_RPC) ProtoMessage() {}

func (x *BackupCapability_RPC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backup_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupCapability_RPC.ProtoReflect.Descriptor instead.
func (*BackupCapability_RPC) Descriptor() ([]byte, []int) {
	return file_proto_backup_proto_rawDescGZIP(), []int{2, 0}
}

func (x *BackupCapability_RPC) GetType() BackupCapability_RPC_Type {
	if x != nil {
		return x.Type
	}
	return BackupCapability_RPC_TYPE_UNSPECIFIED
}

var File_proto_backup_proto protoreflect.FileDescriptor

const file_proto_backup_proto_rawDesc = "" +
	"\n" +
	"\x12proto/backup.proto\x12\x0fcnpgi.backup.v1\"\x1b\n" +
	"\x19BackupCapabilitiesRequest\"a\n" +
	"\x18BackupCapabilitiesResult\x12E\n" +
	"\fcapabilities\x18\x01 \x03(\v2!.cnpgi.backup.v1.BackupCapabilityR\fcapabilities\"\xcb\x01\n" +
	"\x10BackupCapability\x129\n" +
	"\x03rpc\x18\x01 \x01(\v2%.cnpgi.backup.v1.BackupCapability.RPCH\x00R\x03rpc\x1at\n" +
	"\x03RPC\x12>\n" +
	"\x04type\x18\x01 \x01(\x0e2*.cnpgi.backup.v1.BackupCapability.RPC.TypeR\x04type\"-\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vTYPE_BACKUP\x10\x01B\x06\n" +
	"\x04type\"\xfa\x01\n" +
	"\rBackupRequest\x12-\n" +
	"\x12cluster_definition\x18\x01 \x01(\fR\x11clusterDefinition\x12+\n" +
	"\x11backup_definition\x18\x02 \x01(\fR\x10backupDefinition\x12N\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2..cnpgi.backup.v1.BackupRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x04\n" +
	"\fBackupResult\x12\x1b\n" +
	"\tbackup_id\x18\x01 \x01(\tR\bbackupId\x12\x1f\n" +
	"\vbackup_name\x18\x02 \x01(\tR\n" +
	"backupName\x12\x1d\n" +
	"\n" +
	"started_at\x18\x03 \x01(\x03R\tstartedAt\x12\x1d\n" +
	"\n" +
	"stopped_at\x18\x04 \x01(\x03R\tstoppedAt\x12\x1b\n" +
	"\tbegin_wal\x18\x05 \x01(\tR\bbeginWal\x12\x17\n" +
	"\aend_wal\x18\x06 \x01(\tR\x06endWal\x12\x1b\n" +
	"\tbegin_lsn\x18\a \x01(\tR\bbeginLsn\x12\x17\n" +
	"\aend_lsn\x18\b \x01(\tR\x06endLsn\x12*\n" +
	"\x11backup_label_file\x18\t \x01(\fR\x0fbackupLabelFile\x12.\n" +
	"\x13tablespace_map_file\x18\n" +
	" \x01(\fR\x11tablespaceMapFile\x12\x1f\n" +
	"\vinstance_id\x18\v \x01(\tR\n" +
	"instanceId\x12\x16\n" +
	"\x06online\x18\f \x01(\bR\x06online\x12G\n" +
	"\bmetadata\x18\r \x03(\v2+.cnpgi.backup.v1.BackupResult.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xbf\x01\n" +
	"\x06Backup\x12j\n" +
	"\x0fGetCapabilities\x12*.cnpgi.backup.v1.BackupCapabilitiesRequest\x1a).cnpgi.backup.v1.BackupCapabilitiesResult\"\x00\x12I\n" +
	"\x06Backup\x12\x1e.cnpgi.backup.v1.BackupRequest\x1a\x1d.cnpgi.backup.v1.BackupResult\"\x00B-Z+github.com/cloudnative-pg/cnpg-i/pkg/backupb\x06proto3"

var (
	file_proto_backup_proto_rawDescOnce sync.Once
	file_proto_backup_proto_rawDescData []byte
)

func file_proto_backup_proto_rawDescGZIP() []byte {
	file_proto_backup_proto_rawDescOnce.Do(func() {
		file_proto_backup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_backup_proto_rawDesc), len(file_proto_backup_proto_rawDesc)))
	})
	return file_proto_backup_proto_rawDescData
}

var file_proto_backup_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_backup_proto_goTypes = []any{
	(BackupCapability_RPC_Type)(0),    // 0: cnpgi.backup.v1.BackupCapability.RPC.Type
	(*BackupCapabilitiesRequest)(nil), // 1: cnpgi.backup.v1.BackupCapabilitiesRequest
	(*BackupCapabilitiesResult)(nil),  // 2: cnpgi.backup.v1.BackupCapabilitiesResult
	(*BackupCapability)(nil),          // 3: cnpgi.backup.v1.BackupCapability
	(*BackupRequest)(nil),             // 4: cnpgi.backup.v1.BackupRequest
	(*BackupResult)(nil),              // 5: cnpgi.backup.v1.BackupResult
	(*BackupCapability_RPC)(nil),      // 6: cnpgi.backup.v1.BackupCapability.RPC
	nil,                               // 7: cnpgi.backup.v1.BackupRequest.ParametersEntry
	nil,                               // 8: cnpgi.backup.v1.BackupResult.MetadataEntry
}
var file_proto_backup_proto_depIdxs = []int32{
	3, // 0: cnpgi.backup.v1.BackupCapabilitiesResult.capabilities:type_name -> cnpgi.backup.v1.BackupCapability
	6, // 1: cnpgi.backup.v1.BackupCapability.rpc:type_name -> cnpgi.backup.v1.BackupCapability.RPC
	7, // 2: cnpgi.backup.v1.BackupRequest.parameters:type_name -> cnpgi.backup.v1.BackupRequest.ParametersEntry
	8, // 3: cnpgi.backup.v1.BackupResult.metadata:type_name -> cnpgi.backup.v1.BackupResult.MetadataEntry
	0, // 4: cnpgi.backup.v1.BackupCapability.RPC.type:type_name -> cnpgi.backup.v1.BackupCapability.RPC.Type
	1, // 5: cnpgi.backup.v1.Backup.GetCapabilities:input_type -> cnpgi.backup.v1.BackupCapabilitiesRequest
	4, // 6: cnpgi.backup.v1.Backup.Backup:input_type -> cnpgi.backup.v1.BackupRequest
	2, // 7: cnpgi.backup.v1.Backup.GetCapabilities:output_type -> cnpgi.backup.v1.BackupCapabilitiesResult
	5, // 8: cnpgi.backup.v1.Backup.Backup:output_type -> cnpgi.backup.v1.BackupResult
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_backup_proto_init() }
func file_proto_backup_proto_init() {
	if File_proto_backup_proto != nil {
		return
	}
	file_proto_backup_proto_msgTypes[2].OneofWrappers = []any{
		(*BackupCapability_Rpc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_backup_proto_rawDesc), len(file_proto_backup_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_backup_proto_goTypes,
		DependencyIndexes: file_proto_backup_proto_depIdxs,
		EnumInfos:         file_proto_backup_proto_enumTypes,
		MessageInfos:      file_proto_backup_proto_msgTypes,
	}.Build()
	File_proto_backup_proto = out.File
	file_proto_backup_proto_goTypes = nil
	file_proto_backup_proto_depIdxs = nil
}
