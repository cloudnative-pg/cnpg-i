// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/identity.proto

package identity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PluginCapability_Service_Type int32

const (
	PluginCapability_Service_TYPE_UNSPECIFIED PluginCapability_Service_Type = 0
	// TYPE_OPERATOR_SERVICE indicated that the Plugin provider RPCs
	// for the Operator service.
	// The presence of this capability determines whether the CO will
	// attempt to invoke the REQUIRED Operator RPCs, as well
	// as specific RPCs as indicated by GetCapabilities.
	PluginCapability_Service_TYPE_OPERATOR_SERVICE PluginCapability_Service_Type = 1
	// TYPE_WAL_SERVICE indicates that the Plugin provides RPCs for
	// the WAL service. Plugins MAY provide this capability.
	// The presence of this capability determines whether the CO will
	// attempt to invoke the REQUIRED WALService RPCs, as well
	// as specific RPCs as indicated by GetCapabilities.
	PluginCapability_Service_TYPE_WAL_SERVICE PluginCapability_Service_Type = 2
	// TYPE_BACKUP_SERVICE indicates that the Plugin provides RPCs for
	// the Backup service.
	// The presence of this capability determines whether the CO will
	// attempt to invoke the REQUIRED Backup Service RPCs, as well
	// as specific RPCs as indicated by GetCapabilities.
	PluginCapability_Service_TYPE_BACKUP_SERVICE PluginCapability_Service_Type = 3
	// TYPE_LIFECYCLE_SERVICE indicates that the Plugin provides RPCs for
	// the Lifecycle service.
	PluginCapability_Service_TYPE_LIFECYCLE_SERVICE PluginCapability_Service_Type = 4
	// TYPE_RECONCILER_HOOKS indicates that the Plugin provides RPCs to
	// enhance the behavior of the reconcilers
	PluginCapability_Service_TYPE_RECONCILER_HOOKS PluginCapability_Service_Type = 5
	// TYPE_RESTORE_JOB_HOOKS indicates that the Plugin provides RPCs to
	// enhance the behavior of the restore jobs
	PluginCapability_Service_TYPE_RESTORE_JOB PluginCapability_Service_Type = 6
	// TYPE_POSTGRES indicates that the Plugin provides RPCs to
	// enhance the behavior of PostgreSQL
	PluginCapability_Service_TYPE_POSTGRES PluginCapability_Service_Type = 7
	// TYPE_INSTANCE_SIDECAR_INJECTION indicates that the Plugin provides
	// a instance sidecar container
	PluginCapability_Service_TYPE_INSTANCE_SIDECAR_INJECTION PluginCapability_Service_Type = 8
	// TYPE_INSTANCE_JOB_SIDECAR_INJECTION indicates that the Plugin provides
	// a job sidecar container
	PluginCapability_Service_TYPE_INSTANCE_JOB_SIDECAR_INJECTION PluginCapability_Service_Type = 9
	// TYPE_METRICS indicates that the Plugin provides metrics to the instance container
	PluginCapability_Service_TYPE_METRICS PluginCapability_Service_Type = 10
)

// Enum value maps for PluginCapability_Service_Type.
var (
	PluginCapability_Service_Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_OPERATOR_SERVICE",
		2:  "TYPE_WAL_SERVICE",
		3:  "TYPE_BACKUP_SERVICE",
		4:  "TYPE_LIFECYCLE_SERVICE",
		5:  "TYPE_RECONCILER_HOOKS",
		6:  "TYPE_RESTORE_JOB",
		7:  "TYPE_POSTGRES",
		8:  "TYPE_INSTANCE_SIDECAR_INJECTION",
		9:  "TYPE_INSTANCE_JOB_SIDECAR_INJECTION",
		10: "TYPE_METRICS",
	}
	PluginCapability_Service_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":                    0,
		"TYPE_OPERATOR_SERVICE":               1,
		"TYPE_WAL_SERVICE":                    2,
		"TYPE_BACKUP_SERVICE":                 3,
		"TYPE_LIFECYCLE_SERVICE":              4,
		"TYPE_RECONCILER_HOOKS":               5,
		"TYPE_RESTORE_JOB":                    6,
		"TYPE_POSTGRES":                       7,
		"TYPE_INSTANCE_SIDECAR_INJECTION":     8,
		"TYPE_INSTANCE_JOB_SIDECAR_INJECTION": 9,
		"TYPE_METRICS":                        10,
	}
)

func (x PluginCapability_Service_Type) Enum() *PluginCapability_Service_Type {
	p := new(PluginCapability_Service_Type)
	*p = x
	return p
}

func (x PluginCapability_Service_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginCapability_Service_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_identity_proto_enumTypes[0].Descriptor()
}

func (PluginCapability_Service_Type) Type() protoreflect.EnumType {
	return &file_proto_identity_proto_enumTypes[0]
}

func (x PluginCapability_Service_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginCapability_Service_Type.Descriptor instead.
func (PluginCapability_Service_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{4, 0, 0}
}

type GetPluginMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginMetadataRequest) Reset() {
	*x = GetPluginMetadataRequest{}
	mi := &file_proto_identity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginMetadataRequest) ProtoMessage() {}

func (x *GetPluginMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetPluginMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{0}
}

type GetPluginMetadataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name MUST follow domain name notation format
	// (https://tools.ietf.org/html/rfc1035#section-2.3.1). It SHOULD
	// include the plugin's host company name and the plugin name,
	// to minimize the possibility of collisions. It MUST be 63
	// characters or less, beginning and ending with an alphanumeric
	// character ([a-z0-9A-Z]) with dashes (-), dots (.), and
	// alphanumerics between. This field is REQUIRED.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This field is REQUIRED. Value of this field is opaque.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// A name to display for the plugin. This field is REQUIRED.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// A description for the plugin. This field is REQUIRED.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// URL of the home page of the plugin project.
	ProjectUrl string `protobuf:"bytes,5,opt,name=project_url,json=projectUrl,proto3" json:"project_url,omitempty"`
	// URL of the source code repository for the plugin project.
	RepositoryUrl string `protobuf:"bytes,6,opt,name=repository_url,json=repositoryUrl,proto3" json:"repository_url,omitempty"`
	// License of the plugin. This field is REQUIRED.
	License string `protobuf:"bytes,7,opt,name=license,proto3" json:"license,omitempty"`
	// URL of the license of the plugin. This field is REQUIRED.
	LicenseUrl string `protobuf:"bytes,8,opt,name=license_url,json=licenseUrl,proto3" json:"license_url,omitempty"`
	// Maturity level (alpha, beta, stable)
	Maturity string `protobuf:"bytes,9,opt,name=maturity,proto3" json:"maturity,omitempty"`
	// Provider/vendor of the plugin, e.g. an organization
	Vendor string `protobuf:"bytes,10,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// This field is OPTIONAL. Values are opaque.
	Manifest      map[string]string `protobuf:"bytes,11,rep,name=manifest,proto3" json:"manifest,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginMetadataResponse) Reset() {
	*x = GetPluginMetadataResponse{}
	mi := &file_proto_identity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginMetadataResponse) ProtoMessage() {}

func (x *GetPluginMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetPluginMetadataResponse) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{1}
}

func (x *GetPluginMetadataResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetProjectUrl() string {
	if x != nil {
		return x.ProjectUrl
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetRepositoryUrl() string {
	if x != nil {
		return x.RepositoryUrl
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetLicenseUrl() string {
	if x != nil {
		return x.LicenseUrl
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetMaturity() string {
	if x != nil {
		return x.Maturity
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *GetPluginMetadataResponse) GetManifest() map[string]string {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type GetPluginCapabilitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginCapabilitiesRequest) Reset() {
	*x = GetPluginCapabilitiesRequest{}
	mi := &file_proto_identity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginCapabilitiesRequest) ProtoMessage() {}

func (x *GetPluginCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetPluginCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{2}
}

type GetPluginCapabilitiesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All the capabilities that the controller service supports. This
	// field is OPTIONAL.
	Capabilities  []*PluginCapability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginCapabilitiesResponse) Reset() {
	*x = GetPluginCapabilitiesResponse{}
	mi := &file_proto_identity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginCapabilitiesResponse) ProtoMessage() {}

func (x *GetPluginCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetPluginCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{3}
}

func (x *GetPluginCapabilitiesResponse) GetCapabilities() []*PluginCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type PluginCapability struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*PluginCapability_Service_
	Type          isPluginCapability_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginCapability) Reset() {
	*x = PluginCapability{}
	mi := &file_proto_identity_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCapability) ProtoMessage() {}

func (x *PluginCapability) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCapability.ProtoReflect.Descriptor instead.
func (*PluginCapability) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{4}
}

func (x *PluginCapability) GetType() isPluginCapability_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *PluginCapability) GetService() *PluginCapability_Service {
	if x != nil {
		if x, ok := x.Type.(*PluginCapability_Service_); ok {
			return x.Service
		}
	}
	return nil
}

type isPluginCapability_Type interface {
	isPluginCapability_Type()
}

type PluginCapability_Service_ struct {
	Service *PluginCapability_Service `protobuf:"bytes,1,opt,name=service,proto3,oneof"`
}

func (*PluginCapability_Service_) isPluginCapability_Type() {}

type ProbeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeRequest) Reset() {
	*x = ProbeRequest{}
	mi := &file_proto_identity_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeRequest) ProtoMessage() {}

func (x *ProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeRequest.ProtoReflect.Descriptor instead.
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{5}
}

type ProbeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This field is OPTIONAL. If not present, the caller SHALL assume
	// that the plugin is in a ready state and is accepting calls to its
	// Controller and/or Node services (according to the plugin's reported
	// capabilities).
	Ready         bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeResponse) Reset() {
	*x = ProbeResponse{}
	mi := &file_proto_identity_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResponse) ProtoMessage() {}

func (x *ProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResponse.ProtoReflect.Descriptor instead.
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{6}
}

func (x *ProbeResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type PluginCapability_Service struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Type          PluginCapability_Service_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cnpgi.identity.v1.PluginCapability_Service_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginCapability_Service) Reset() {
	*x = PluginCapability_Service{}
	mi := &file_proto_identity_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginCapability_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCapability_Service) ProtoMessage() {}

func (x *PluginCapability_Service) ProtoReflect() protoreflect.Message {
	mi := &file_proto_identity_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCapability_Service.ProtoReflect.Descriptor instead.
func (*PluginCapability_Service) Descriptor() ([]byte, []int) {
	return file_proto_identity_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PluginCapability_Service) GetType() PluginCapability_Service_Type {
	if x != nil {
		return x.Type
	}
	return PluginCapability_Service_TYPE_UNSPECIFIED
}

var File_proto_identity_proto protoreflect.FileDescriptor

const file_proto_identity_proto_rawDesc = "" +
	"\n" +
	"\x14proto/identity.proto\x12\x11cnpgi.identity.v1\"\x1a\n" +
	"\x18GetPluginMetadataRequest\"\xda\x03\n" +
	"\x19GetPluginMetadataResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1f\n" +
	"\vproject_url\x18\x05 \x01(\tR\n" +
	"projectUrl\x12%\n" +
	"\x0erepository_url\x18\x06 \x01(\tR\rrepositoryUrl\x12\x18\n" +
	"\alicense\x18\a \x01(\tR\alicense\x12\x1f\n" +
	"\vlicense_url\x18\b \x01(\tR\n" +
	"licenseUrl\x12\x1a\n" +
	"\bmaturity\x18\t \x01(\tR\bmaturity\x12\x16\n" +
	"\x06vendor\x18\n" +
	" \x01(\tR\x06vendor\x12V\n" +
	"\bmanifest\x18\v \x03(\v2:.cnpgi.identity.v1.GetPluginMetadataResponse.ManifestEntryR\bmanifest\x1a;\n" +
	"\rManifestEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1e\n" +
	"\x1cGetPluginCapabilitiesRequest\"h\n" +
	"\x1dGetPluginCapabilitiesResponse\x12G\n" +
	"\fcapabilities\x18\x01 \x03(\v2#.cnpgi.identity.v1.PluginCapabilityR\fcapabilities\"\xde\x03\n" +
	"\x10PluginCapability\x12G\n" +
	"\aservice\x18\x01 \x01(\v2+.cnpgi.identity.v1.PluginCapability.ServiceH\x00R\aservice\x1a\xf8\x02\n" +
	"\aService\x12D\n" +
	"\x04type\x18\x01 \x01(\x0e20.cnpgi.identity.v1.PluginCapability.Service.TypeR\x04type\"\xa6\x02\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15TYPE_OPERATOR_SERVICE\x10\x01\x12\x14\n" +
	"\x10TYPE_WAL_SERVICE\x10\x02\x12\x17\n" +
	"\x13TYPE_BACKUP_SERVICE\x10\x03\x12\x1a\n" +
	"\x16TYPE_LIFECYCLE_SERVICE\x10\x04\x12\x19\n" +
	"\x15TYPE_RECONCILER_HOOKS\x10\x05\x12\x14\n" +
	"\x10TYPE_RESTORE_JOB\x10\x06\x12\x11\n" +
	"\rTYPE_POSTGRES\x10\a\x12#\n" +
	"\x1fTYPE_INSTANCE_SIDECAR_INJECTION\x10\b\x12'\n" +
	"#TYPE_INSTANCE_JOB_SIDECAR_INJECTION\x10\t\x12\x10\n" +
	"\fTYPE_METRICS\x10\n" +
	"B\x06\n" +
	"\x04type\"\x0e\n" +
	"\fProbeRequest\"%\n" +
	"\rProbeResponse\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready2\xc8\x02\n" +
	"\bIdentity\x12p\n" +
	"\x11GetPluginMetadata\x12+.cnpgi.identity.v1.GetPluginMetadataRequest\x1a,.cnpgi.identity.v1.GetPluginMetadataResponse\"\x00\x12|\n" +
	"\x15GetPluginCapabilities\x12/.cnpgi.identity.v1.GetPluginCapabilitiesRequest\x1a0.cnpgi.identity.v1.GetPluginCapabilitiesResponse\"\x00\x12L\n" +
	"\x05Probe\x12\x1f.cnpgi.identity.v1.ProbeRequest\x1a .cnpgi.identity.v1.ProbeResponse\"\x00B/Z-github.com/cloudnative-pg/cnpg-i/pkg/identityb\x06proto3"

var (
	file_proto_identity_proto_rawDescOnce sync.Once
	file_proto_identity_proto_rawDescData []byte
)

func file_proto_identity_proto_rawDescGZIP() []byte {
	file_proto_identity_proto_rawDescOnce.Do(func() {
		file_proto_identity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_identity_proto_rawDesc), len(file_proto_identity_proto_rawDesc)))
	})
	return file_proto_identity_proto_rawDescData
}

var file_proto_identity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_identity_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_identity_proto_goTypes = []any{
	(PluginCapability_Service_Type)(0),    // 0: cnpgi.identity.v1.PluginCapability.Service.Type
	(*GetPluginMetadataRequest)(nil),      // 1: cnpgi.identity.v1.GetPluginMetadataRequest
	(*GetPluginMetadataResponse)(nil),     // 2: cnpgi.identity.v1.GetPluginMetadataResponse
	(*GetPluginCapabilitiesRequest)(nil),  // 3: cnpgi.identity.v1.GetPluginCapabilitiesRequest
	(*GetPluginCapabilitiesResponse)(nil), // 4: cnpgi.identity.v1.GetPluginCapabilitiesResponse
	(*PluginCapability)(nil),              // 5: cnpgi.identity.v1.PluginCapability
	(*ProbeRequest)(nil),                  // 6: cnpgi.identity.v1.ProbeRequest
	(*ProbeResponse)(nil),                 // 7: cnpgi.identity.v1.ProbeResponse
	nil,                                   // 8: cnpgi.identity.v1.GetPluginMetadataResponse.ManifestEntry
	(*PluginCapability_Service)(nil),      // 9: cnpgi.identity.v1.PluginCapability.Service
}
var file_proto_identity_proto_depIdxs = []int32{
	8, // 0: cnpgi.identity.v1.GetPluginMetadataResponse.manifest:type_name -> cnpgi.identity.v1.GetPluginMetadataResponse.ManifestEntry
	5, // 1: cnpgi.identity.v1.GetPluginCapabilitiesResponse.capabilities:type_name -> cnpgi.identity.v1.PluginCapability
	9, // 2: cnpgi.identity.v1.PluginCapability.service:type_name -> cnpgi.identity.v1.PluginCapability.Service
	0, // 3: cnpgi.identity.v1.PluginCapability.Service.type:type_name -> cnpgi.identity.v1.PluginCapability.Service.Type
	1, // 4: cnpgi.identity.v1.Identity.GetPluginMetadata:input_type -> cnpgi.identity.v1.GetPluginMetadataRequest
	3, // 5: cnpgi.identity.v1.Identity.GetPluginCapabilities:input_type -> cnpgi.identity.v1.GetPluginCapabilitiesRequest
	6, // 6: cnpgi.identity.v1.Identity.Probe:input_type -> cnpgi.identity.v1.ProbeRequest
	2, // 7: cnpgi.identity.v1.Identity.GetPluginMetadata:output_type -> cnpgi.identity.v1.GetPluginMetadataResponse
	4, // 8: cnpgi.identity.v1.Identity.GetPluginCapabilities:output_type -> cnpgi.identity.v1.GetPluginCapabilitiesResponse
	7, // 9: cnpgi.identity.v1.Identity.Probe:output_type -> cnpgi.identity.v1.ProbeResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_identity_proto_init() }
func file_proto_identity_proto_init() {
	if File_proto_identity_proto != nil {
		return
	}
	file_proto_identity_proto_msgTypes[4].OneofWrappers = []any{
		(*PluginCapability_Service_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_identity_proto_rawDesc), len(file_proto_identity_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_identity_proto_goTypes,
		DependencyIndexes: file_proto_identity_proto_depIdxs,
		EnumInfos:         file_proto_identity_proto_enumTypes,
		MessageInfos:      file_proto_identity_proto_msgTypes,
	}.Build()
	File_proto_identity_proto = out.File
	file_proto_identity_proto_goTypes = nil
	file_proto_identity_proto_depIdxs = nil
}
